
option java_package = "com.mmo.server";
option java_outer_classname = "ServerClientProtocol";
option java_generic_services = true;
option java_generate_equals_and_hash = true;


/* Enumerations */

enum LoginCode {
    SUC = 0;
   	ERROR_PWD = 1;
   	OCCUPIED = 2;
   	NOT_EXIST = 3;
}

enum CommonStat {
	OK = 0;
	ERROR = 1;
}

enum ItemType {
	BUILD = 0;
	MATERIAL = 1;
}

/* Basically Informations */

message Position {
	required int32 posX = 1;
	required int32 posY = 2;
	required int32 posZ = 3;
	
}

message ModInfo {
	required int32 modId = 1;
	required int32 motion = 2;
	required int32 orientation = 3;
}

message MotionInfo {
	required int32 motion = 1;
	required int32 effect = 2;
	required float speed = 3;
}

message SurvivalInfo {
	required int32 hearth = 1;
	required int32 hungry = 2;
	required int32 tired = 3;
}

message IdentifyInfo {
	required string ID = 1;
	required string name = 2;
	required ItemType type = 3;
}

/* Basically Objects */

message Item {
	required IdentifyInfo identify = 1;
	required Position position = 2;
	required ModInfo modInfo = 3;
	required SurvivalInfo survivalInfo= 4;
}


message Character {
	required IdentifyInfo identify = 1;
	required Position position = 2;
	required ModInfo modInfo = 3;
	required SurvivalInfo survivalInfo= 4;
}


/* Accounts */

message ClientCommonResponse {
	required CommonStat stat = 1;
}


message UserLoginRequest {
	required string uname = 1;
	required string upwd = 2;
}

message UserLoginResponse {
	required LoginCode code = 1;
	required string ticket = 2;
}

message UserLogoutRequest {
	required string ticket = 1;
}

message UserLogoutResponse {
	required LoginCode code = 1;
}

message GetCharacterInfoRequest {
	required string ticket = 1;
}

message GetCharacterInfoResponse {
	required Character character = 1;
}

/* Item Events */

message ItemMoveEvent {
	repeated IdentifyInfo identify = 1;
	repeated Position fromPos = 2;
	repeated Position toPos = 3;
	repeated float speed = 4;
	repeated MotionInfo playMotion = 5;
}

message ItemCraateEvent {
	repeated Item item = 1;
}

message ItemDestroyEvent {
	repeated IdentifyInfo identify = 1;
}

/* Character Event */

message CharacterCreateEvent {
	repeated Character character = 1;
}


/* Controls */


message CharacterMove {
	required string ticket = 1;
	required Position toPos = 2;
}


/* Services Definition */

service ServerGateService {
	rpc userLogin (UserLoginRequest) returns (UserLoginResponse) {}
	rpc userLogout (UserLogoutRequest) returns (UserLogoutResponse) {}
	rpc getCharacter (GetCharacterInfoRequest) returns (GetCharacterInfoResponse) {}
}

service ClientSideService {
	rpc moveTo (CharacterMove) returns (ClientCommonResponse) {}
}
